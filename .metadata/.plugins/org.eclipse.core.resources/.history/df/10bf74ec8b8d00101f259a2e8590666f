// ProductService.java
package com.microstore.products.service;

import com.microstore.products.entity.Product;
import com.microstore.products.repository.ProductRepository;
import com.microstore.products.repository.CategoryRepository;
import com.microstore.products.entity.Category;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class ProductService {

    private final ProductRepository productRepository;
    private final CategoryRepository categoryRepository;

    public ProductService(ProductRepository productRepository, CategoryRepository categoryRepository) {
        this.productRepository = productRepository;
        this.categoryRepository = categoryRepository;
    }

    public Product createProduct(Product product) {
        // Verifica se a categoria existe
        if (product.getCategory() != null && !categoryRepository.existsById(product.getCategory().getId())) {
            throw new RuntimeException("Categoria não encontrada");
        }
        return productRepository.save(product);
    }

    public List<Product> getAllProducts() {
        return productRepository.findAll();
    }

    public Optional<Product> getProductById(Long id) {
        return productRepository.findById(id);
    }

    public Product updateProduct(Long id, Product updatedProduct) {
        return productRepository.findById(id).map(product -> {
            product.setName(updatedProduct.getName());
            product.setPrice(updatedProduct.getPrice());
            product.setCategory(updatedProduct.getCategory());
            return productRepository.save(product);
        }).orElseThrow(() -> new RuntimeException("Produto não encontrado"));
    }

    public void deleteProduct(Long id) {
        productRepository.deleteById(id);
    }
}
